{"version":3,"sources":["assets/logo.svg","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Layout/Layout.tsx","api/location.ts","api/municipalities.ts","util/locations.ts","api/reports.ts","components/Table/MunicipalityRow.tsx","components/Table/Table.tsx","util/converter.ts","components/Table/ReportRow.tsx","components/Table/TableHeaderItem.tsx","components/Loader/Loader.tsx","pages/Newest.tsx","pages/NotFound.tsx","components/Comment/Comment.tsx","components/CommentList/CommentList.tsx","components/DescriptionListItem/DescriptionListItem.tsx","pages/Report.tsx","pages/Nearby.tsx","pages/Municipalities.tsx","pages/Municipality.tsx","App.tsx","index.tsx"],"names":["Navbar","location","useLocation","linkClass","linkClassMobile","calculateLinkClass","path","pathname","className","src","Logo","alt","to","Header","children","Layout","title","ENDPOINT_IPIFY","ENDPOINT_IPGEOLOCATION","requestOptions","method","redirect","getClientLocation","a","fetch","ipResponse","json","ipResponseBody","ip","locationResponse","locationResponseBody","lat","lon","getMunicipalities","fetchData","municipalitiesQuery","response","responseBody","data","municipalities","getMunicipalityName","id","municipalityQuery","municipality","name","query","config","graphQLEndpoint","headers","body","JSON","stringify","calculateDistanceTo","latitude","longitude","getDistance","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","Math","sin","cos","c","atan2","sqrt","round","deg","PI","getNewestReports","newestReportsQuery","reports","getNearestReports","locations","i","length","push","distance","sort","b","index","getReportsByMunicipality","reportsNearbyQuery","reportsNearby","reportsByMunicipalityQuery","getReport","reportQuery","report","MunicipalityRow","district","state","baseClass","country","computeCountryClass","Table","header","map","headerItem","TableHeaderItem","isButton","row","ReportRow","formatDateTime","dateTime","dateObj","Date","date","getDate","month","toLocaleString","year","getFullYear","hours","getHours","minutes","getMinutes","substring","createdAt","status","computeStatusClass","commentCount","scope","Loader","Newest","useState","setReports","isLoading","setIsLoading","useEffect","loadReports","reportTableHeader","NotFound","Comment","timestamp","CommentList","comment","text","DescriptionListItem","backgroundColorClass","label","Report","reportId","match","params","setReport","setDistance","loadData","useCallback","reportData","description","category","comments","Nearby","Municipalities","setMunicipalities","loadMunicipalities","Municipality","locationId","setMunicipality","municipalityName","App","exact","component","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.c127d6d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e2636b86.svg\";","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Logo from '../../assets/logo.svg';\n\nexport default function Navbar() {\n  const location = useLocation();\n\n  const linkClass = 'px-3 py-2 rounded-md text-sm font-medium';\n  const linkClassMobile = 'block px-3 py-2 rounded-md text-base font-medium';\n\n  const calculateLinkClass = (path: string) => {\n    if (location.pathname === path) {\n      return 'bg-gray-900 text-white';\n    }\n    return 'text-gray-300 hover:bg-gray-700 hover:text-white';\n  };\n\n  return (\n    <div>\n      <nav className=\"bg-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <img\n                  className=\"h-8 w-8\"\n                  src={Logo}\n                  alt=\"Logo\"/>\n              </div>\n              <div className=\"hidden md:block\">\n                <div className=\"ml-10 flex items-baseline space-x-4\">\n                  <Link to=\"/\" className={`${calculateLinkClass('/')} ${linkClass}`}>\n                    Neuste Meldungen\n                  </Link>\n                  <Link to=\"/nearby\" className={`${calculateLinkClass('/nearby')} ${linkClass}`}>\n                    In der Nähe\n                  </Link>\n                  <Link to=\"/locations\" className={`${calculateLinkClass('/locations')} ${linkClass}`}>\n                    Gemeinden\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"-mr-2 flex md:hidden\">\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 flex flex-col items-center\">\n            <Link to=\"/\" className={`${calculateLinkClass('/')} ${linkClassMobile}`}>\n              Neuste Meldungen\n            </Link>\n            <Link to=\"/nearby\" className={`${calculateLinkClass('/nearby')} ${linkClassMobile}`}>\n              In der Nähe\n            </Link>\n            <Link to=\"/locations\" className={`${calculateLinkClass('/locations')} ${linkClassMobile}`}>\n              Gemeinden\n            </Link>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}","import React from 'react';\n\ninterface Props {\n  children: string;\n}\n\nexport default function Header({ children }: Props) {\n  return (\n    <header className=\"bg-white shadow\">\n      <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n        <h3 className=\"text-3xl font-bold text-gray-900\">\n          { children }\n        </h3>\n      </div>\n    </header>\n  );\n}","import React, { ReactNode } from 'react';\nimport { Navbar } from '../Navbar';\nimport { Header } from '../Header';\n\ninterface Props {\n  children: ReactNode;\n  title?: string;\n}\n\nexport default function Layout({ children, title }: Props) {\n  return (\n    <div>\n      <Navbar/>\n      { title && <Header>{ title }</Header> }\n      <main>\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n          { children }\n        </div>\n      </main>\n    </div>\n  );\n}","const ENDPOINT_IPIFY = 'https://api.ipify.org?format=json';\nconst ENDPOINT_IPGEOLOCATION = 'http://ip-api.com/json';\n\nconst requestOptions: any = {\n  method: 'GET',\n  redirect: 'follow'\n};\n\nexport async function getClientLocation() {\n  const ipResponse = await fetch(ENDPOINT_IPIFY);\n  const ipResponseBody = await ipResponse.json();\n\n  const locationResponse = await fetch(`${ENDPOINT_IPGEOLOCATION}/${ipResponseBody.ip}`, requestOptions);\n  const locationResponseBody = await locationResponse.json();\n  return {\n    lat: locationResponseBody.lat,\n    lon: locationResponseBody.lon\n  };\n}","import config from '../util/config.json';\n\nexport async function getMunicipalities() {\n  const response = await fetchData(municipalitiesQuery);\n  const responseBody = await response.json();\n  return responseBody.data.municipalities.data;\n}\n\nexport async function getMunicipalityName(id: number) {\n  const response = await fetchData(municipalityQuery(id));\n  const responseBody = await response.json();\n  return responseBody.data.municipality.name;\n}\n\nasync function fetchData(query: string) {\n  return await fetch(config.graphQLEndpoint, {\n    method: 'POST',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({ query: query })\n  });\n}\n\nconst municipalitiesQuery = `{\n  municipalities(count: 100) {\n    data {\n      id,\n      name,\n      country,\n      state,\n      district,\n      location {\n        latitude,\n        longitude\n      }\n    }\n  }\n}`;\n\nconst municipalityQuery = (id: number) => {\n  return `{\n    municipality(id: ${id}) {\n      name\n    }\n  }`;\n}","import { getClientLocation } from '../api/location';\n\nexport async function calculateDistanceTo(latitude: number, longitude: number) {\n  const location = await getClientLocation();\n  return getDistance(location.lat, location.lon, latitude, longitude);\n}\n\nexport function getDistance(lat1: number, lon1: number, lat2: number, lon2: number) {\n  const R = 6371; // Radius of the earth in km\n  const dLat = deg2rad(lat2 - lat1);  // deg2rad below\n  const dLon = deg2rad(lon2 - lon1);\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2)\n  ;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return Math.round(R * c);\n}\n\nfunction deg2rad(deg: number) {\n  return deg * (Math.PI/180)\n}","import config from '../util/config.json';\nimport { getClientLocation } from './location';\nimport { getMunicipalities } from './municipalities';\nimport { getDistance } from '../util/locations';\n\nexport async function getReports() {\n  const response = await fetchData(reportsQuery);\n  const responseBody = await response.json();\n  return responseBody.data.reports.data;\n}\n\nexport async function getNewestReports() {\n  const response = await fetchData(newestReportsQuery);\n  const responseBody = await response.json();\n  return responseBody.data.reports.data;\n}\n\nexport async function getNearestReports() {\n  const location = await getClientLocation();\n  const municipalities = await getMunicipalities();\n  const locations = [];\n  for (let i = 0; i < municipalities.length; i++) {\n    locations.push({ ...municipalities[i], distance: getDistance(municipalities[i].location.latitude, municipalities[i].location.longitude, location.lat, location.lon) });\n  }\n  locations.sort((a: any, b: any) => {\n    return a.distance - b.distance;\n  });\n\n  let reports = null;\n  let index = 0;\n  while (!reports && index < locations.length) {\n    reports = await getReportsByMunicipality(locations[index].id);\n  }\n\n  const response = await fetchData(reportsNearbyQuery(reports[0].id));\n  const responseBody = await response.json();\n  return responseBody.data.reportsNearby.data;\n}\n\nexport async function getReportsByMunicipality(id: number) {\n  const response = await fetchData(reportsByMunicipalityQuery(id));\n  const responseBody = await response.json();\n  return responseBody.data.reports.data;\n}\n\nexport async function getReport(id: number) {\n  const response = await fetchData(reportQuery(id));\n  const responseBody = await response.json();\n  return responseBody.data?.report;\n}\n\nasync function fetchData(query: string) {\n  return await fetch(config.graphQLEndpoint, {\n    method: 'POST',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({ query: query })\n  });\n}\n\nconst reportsQuery = `{\n  reports {\n    data {\n      id,\n      category {\n        name\n      },\n      status {\n        name\n      },\n      title,\n      description,\n      createdAt,\n      municipality {\n        name\n      },\n      location {\n        latitude,\n        longitude\n      }\n    }\n  }\n}`;\n\nconst newestReportsQuery = `{\n  reports(sortType: \"createdAt\") {\n    data {\n      id,\n      title,\n      createdAt,\n      status {\n        name\n      },\n      commentCount,\n      municipality {\n        name,\n        country\n      },\n      location {\n        latitude,\n        longitude\n      }\n    }\n  }\n}`;\n\nconst reportsNearbyQuery = (id: number) => {\n  return `{\n    reportsNearby(reportId: ${id}) {\n      data {\n        id,\n        title,\n        createdAt,\n        status {\n          name\n        },\n        commentCount,\n        municipality {\n          name,\n          country\n        }\n      }\n    }\n  }`;\n}\n\nconst reportsByMunicipalityQuery = (id: number) => {\n  return `{\n    reports(municipalityId: ${id}, sortType: \"createdAt\") {\n      data {\n        id,\n        title,\n        createdAt,\n        status {\n          name\n        },\n        commentCount,\n        municipality {\n          name,\n          country\n        }\n      }\n    }\n  }`;\n}\n\nconst reportQuery = (id: number) => {\n  return `{\n    report(id: ${id}) {\n      category {\n        name,\n      },\n      title,\n      description,\n      location {\n        latitude,\n        longitude\n      },\n      createdAt,\n      commentCount,\n      comments {\n        text,\n        createdAt\n      },\n      municipality {\n        name,\n        country\n      }\n    }\n  }`;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  children: any;\n}\n\nexport default function MunicipalityRow({ children }: Props) {\n  const computeCountryClass = () => {\n    const baseClass = 'px-2 inline-flex text-xs leading-5 font-semibold rounded-full'\n    switch (children.country) {\n      case 'Österreich':\n        return `${baseClass} bg-red-100 text-red-800`;\n\n      case 'Deutschland':\n        return `${baseClass} bg-yellow-100 text-yellow-800`;\n\n      default:\n        return `${baseClass} bg-green-100 text-green-800`;\n    }\n  };\n\n  return (\n    <tr>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"flex items-center\">\n          <div>\n            <div className=\"text-sm font-medium text-gray-900\">\n              { children.name }\n            </div>\n          </div>\n        </div>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">\n          { children.district }\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          { children.state }\n        </div>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <span className={computeCountryClass()}>\n          { children.country }\n        </span>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n        <Link\n          to={`/locations/${children.id}`}\n          className=\"text-indigo-600 hover:text-indigo-900\"\n        >\n          Zu den Meldungen\n        </Link>\n      </td>\n    </tr>\n  );\n}","import React from 'react';\nimport { ReportRow, TableHeaderItem } from './index';\nimport MunicipalityRow from './MunicipalityRow';\n\ninterface Props {\n  header: any[];\n  children: any[];\n}\n\nexport default function Table({ header, children }: Props) {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  {\n                    header.map(headerItem => (\n                      <TableHeaderItem\n                        key={headerItem.title}\n                        isButton={headerItem.isButton}\n                      >\n                        { headerItem.title }\n                      </TableHeaderItem>\n                    ))\n                  }\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                header[0].title === 'Gemeinde' ?\n                children.map(row => (\n                  <MunicipalityRow key={row.id}>{ row }</MunicipalityRow>\n                )) :\n                children.map(row => (\n                  <ReportRow key={row.id}>{ row }</ReportRow>\n                ))\n              }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","export function formatDateTime(dateTime: string) {\n  const dateObj = new Date(dateTime);\n  const date = dateObj.getDate();\n  const month = dateObj.toLocaleString('de-at', { month: 'long' });\n  const year = dateObj.getFullYear();\n  const hours = dateObj.getHours();\n  const minutes = (dateObj.getMinutes()<10?'0':'') + dateObj.getMinutes();\n  if (!date || !month || !year || !hours || !minutes) {\n    return '';\n  }\n  return `${date}. ${month} ${year} um ${hours}:${minutes} Uhr`;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatDateTime } from '../../util/converter';\n\ninterface Props {\n  children: any;\n}\n\nexport default function ReportRow({ children }: Props) {\n  const computeStatusClass = () => {\n    const baseClass = 'px-2 inline-flex text-xs leading-5 font-semibold rounded-full'\n    switch (children.status.name) {\n      case 'Neu':\n        return `${baseClass} bg-blue-100 text-blue-800`;\n\n      case 'Angenommen':\n        return `${baseClass} bg-yellow-100 text-yellow-800`;\n\n      case 'Zurückgestellt':\n        return `${baseClass} bg-red-100 text-red-800`;\n\n      case 'Nicht möglich':\n        return `${baseClass} bg-red-100 text-red-800`;\n\n      default:\n        return `${baseClass} bg-green-100 text-green-800`;\n    }\n  };\n\n  return (\n    <tr>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"flex items-center\">\n          <div>\n            <div className=\"text-sm font-medium text-gray-900\">\n              { children.title.length > 70 ? `${children.title.substring(0, 67)}...` : children.title }\n            </div>\n            <div className=\"text-sm text-gray-500\">\n              { formatDateTime(children.createdAt) }\n            </div>\n          </div>\n        </div>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">\n          { children.municipality.name }\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          { children.municipality.country }\n        </div>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <span className={computeStatusClass()}>\n          { children.status.name }\n        </span>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        { children.commentCount }\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n        <Link\n          to={`/reports/${children.id}`}\n          className=\"text-indigo-600 hover:text-indigo-900\"\n        >\n          Details\n        </Link>\n      </td>\n    </tr>\n  );\n}","import React from 'react';\n\ninterface Props {\n  isButton?: boolean;\n  children: string;\n}\n\nexport default function TableHeaderItem({ isButton = false, children }: Props) {\n  if (isButton) {\n    return (\n      <th scope=\"col\" className=\"relative px-6 py-3\">\n        <span className=\"sr-only\">{ children }</span>\n      </th>\n    );\n  }\n\n  return (\n    <th\n      scope=\"col\"\n      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n    >\n      { children }\n    </th>\n  );\n}","import React from 'react';\nimport './Loader.css';\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__animation\">\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;","import React, { useEffect, useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { getNewestReports } from '../api/reports';\nimport { Table } from '../components/Table';\nimport config from '../util/config.json';\nimport { Loader } from '../components/Loader';\n\nexport default function Newest() {\n  const [reports, setReports] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadReports();\n  }, []);\n\n  const loadReports = async () => {\n    const response = await getNewestReports();\n    setReports(response);\n    setIsLoading(false)\n  };\n\n  return (\n    <Layout title=\"Neuste Meldungen\">\n      {\n        isLoading ?\n          <Loader/> :\n          <Table header={config.reportTableHeader}>{ reports }</Table>\n      }\n    </Layout>\n  );\n}","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div>Not found!</div>\n  );\n}","import React from 'react';\nimport { formatDateTime } from '../../util/converter';\n\ninterface Props {\n  timestamp: string,\n  children: string\n}\n\nexport default function Comment({ timestamp, children }: Props) {\n  return (\n    <li className=\"pl-3 pr-4 py-3 flex flex-col justify-between text-sm\">\n      <p className=\"text-gray-500 ml-2 mb-2\">{ formatDateTime(timestamp) }:</p>\n      <p className=\"ml-2\">{ children }</p>\n    </li>\n  );\n}","import React from 'react';\nimport { Comment } from './../Comment';\n\ntype CommentType = {\n  text: string,\n  createdAt: string\n};\n\ninterface Props {\n  children: CommentType[]\n}\n\nexport default function CommentList({ children }: Props) {\n  return (\n    <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n      <dt className=\"text-sm font-medium text-gray-500\">\n        Kommentare\n      </dt>\n      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n        <ul className=\"border border-gray-200 rounded-md divide-y divide-gray-200\">\n          { children.map((comment: CommentType) => (\n            <Comment\n              key={comment.createdAt}\n              timestamp={comment.createdAt}\n            >\n              { comment.text }\n            </Comment>\n          ))\n          }\n        </ul>\n      </dd>\n    </div>\n  );\n}","import React from 'react';\n\ninterface Props {\n  backgroundColorClass?: string;\n  label: string;\n  children: string;\n}\n\nexport default function DescriptionListItem({ backgroundColorClass = 'bg-gray-50', label, children }: Props) {\n  return (\n    <div className={`${backgroundColorClass} px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6`}>\n      <dt className=\"text-sm font-medium text-gray-500\">\n        { label }\n      </dt>\n      <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n        { children }\n      </dd>\n    </div>\n  );\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport NotFound from './NotFound';\nimport { CommentList } from '../components/CommentList';\nimport { DescriptionListItem } from '../components/DescriptionListItem';\nimport { Loader } from '../components/Loader';\nimport { getReport } from '../api/reports';\nimport { calculateDistanceTo } from '../util/locations';\nimport { formatDateTime } from '../util/converter';\n\ninterface Props {\n  match: any;\n}\n\nexport default function Report({ match }: Props) {\n  const { reportId } = match.params;\n  const [report, setReport] = useState<any>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [distance, setDistance] = useState(3);\n\n  const loadData = useCallback(\n    async () => {\n      const reportData = await getReport(reportId);\n      setReport(reportData);\n      setDistance(await calculateDistanceTo(reportData.location.latitude, reportData.location.longitude))\n      setIsLoading(false)\n    }, [reportId]\n  );\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <>\n      {\n        (!isLoading && !report) ?\n          <NotFound/> :\n          <Layout>\n            {\n              isLoading ?\n              <Loader/> :\n                <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n                  <div className=\"px-4 py-5 sm:px-6\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                      { report.title }\n                    </h3>\n                    <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n                      { formatDateTime(report.createdAt) }{ distance ? `, etwa ${distance} Kilometer entfernt` : '' }\n                    </p>\n                  </div>\n                  <div className=\"border-t border-gray-200\">\n                    <dl>\n                      <DescriptionListItem label=\"Beschreibung\">\n                        { report.description }\n                      </DescriptionListItem>\n                      <DescriptionListItem\n                        backgroundColorClass=\"bg-white\"\n                        label=\"Kategorie\"\n                      >\n                        { report.category.name }\n                      </DescriptionListItem>\n                      <DescriptionListItem label=\"Ort\">\n                        {`${report.municipality.name}, ${report.municipality.country}`}\n                      </DescriptionListItem>\n                      {\n                        report.comments.length > 0 &&\n                        <CommentList>{ report.comments }</CommentList>\n                      }\n                    </dl>\n                  </div>\n                </div>\n            }\n          </Layout>\n      }\n    </>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { getNearestReports } from '../api/reports';\nimport { Loader } from '../components/Loader';\nimport { Table } from '../components/Table';\nimport config from '../util/config.json';\n\nexport default function Nearby() {\n  const [reports, setReports] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadReports();\n  }, []);\n\n  const loadReports = async () => {\n    const response = await getNearestReports();\n    setReports(response);\n    setIsLoading(false)\n  };\n\n  return (\n    <Layout title=\"In der Nähe\">\n      {\n        isLoading ?\n          <Loader/> :\n          <Table header={config.reportTableHeader}>{ reports }</Table>\n      }\n    </Layout>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { Table } from '../components/Table';\nimport { getMunicipalities } from '../api/municipalities';\nimport { Loader } from '../components/Loader';\n\nexport default function Municipalities() {\n  const [municipalities, setMunicipalities] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const tableHeader = [\n    {\n      title: 'Gemeinde',\n      isButton: false\n    },\n    {\n      title: 'Bezirk / Bundesland',\n      isButton: false\n    },\n    {\n      title: 'Staat',\n      isButton: false\n    },\n    {\n      title: 'Zu den Meldungen',\n      isButton: true\n    },\n  ];\n\n  useEffect(() => {\n    loadMunicipalities();\n  }, []);\n\n  const loadMunicipalities = async () => {\n    const response = await getMunicipalities();\n    setMunicipalities(response);\n    setIsLoading(false)\n  };\n\n  return (\n    <Layout title=\"Gemeinden\">\n      {\n        isLoading ?\n          <Loader/> :\n          <Table header={tableHeader}>{ municipalities }</Table>\n      }\n    </Layout>\n  );\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { Table } from '../components/Table';\nimport { Loader } from '../components/Loader';\nimport { getMunicipalityName } from '../api/municipalities';\nimport { getReportsByMunicipality } from '../api/reports';\nimport config from '../util/config.json';\n\ninterface Props {\n  match: any;\n}\n\nexport default function Municipality({ match }: Props) {\n  const { locationId } = match.params;\n  const [reports, setReports] = useState([]);\n  const [municipality, setMunicipality] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const loadReports = useCallback(\n    async () => {\n      const municipalityName = await getMunicipalityName(locationId);\n      setMunicipality(municipalityName);\n      const response = await getReportsByMunicipality(locationId);\n      setReports(response);\n      setIsLoading(false)\n    }, [locationId]\n  );\n\n  useEffect(() => {\n    loadReports();\n  }, [loadReports]);\n\n  return (\n    <Layout title={municipality && `Meldungen aus ${municipality}`}>\n      {\n        isLoading ?\n        <Loader/> :\n        <Table header={config.reportTableHeader}>{ reports }</Table>\n      }\n    </Layout>\n  );\n}","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Newest from './pages/Newest';\nimport Report from './pages/Report';\nimport Nearby from './pages/Nearby';\nimport Municipalities from './pages/Municipalities';\nimport NotFound from './pages/NotFound';\nimport Municipality from './pages/Municipality';\n\nexport default function App() {\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Newest}/>\n        <Route exact path=\"/reports/:reportId\" component={Report}/>\n        <Route exact path=\"/nearby\" component={Nearby}/>\n        <Route exact path=\"/locations\" component={Municipalities}/>\n        <Route exact path=\"/locations/:locationId\" component={Municipality}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </HashRouter>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}